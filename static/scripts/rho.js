import{PerspectiveCamera as h,Scene as a,Vector2 as s,LineBasicMaterial as w,BufferGeometry as d,Vector3 as r,Line as n}from"../../snowpack/pkg/three.js";export class Rho{constructor(){this.lines=[],this.mouse=new s}init(e){this.renderer=e,this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setClearColor(723723),this.scene=new a,this.camera=new h(45,window.innerWidth/window.innerHeight,1,1e4),this.camera.position.set(0,0,10);const i=new w({color:"white"}),t=new d().setFromPoints([new r(.5,0,0),new r(2,0,0)]);this.lines.push(new n(t,i)),this.lines[0].rotateZ(0),this.lines.push(new n(t,i)),this.lines[1].rotateZ(Math.PI),this.lines.push(new n(t,i)),this.lines[2].rotateZ(Math.PI/2),this.lines.push(new n(t,i)),this.lines[3].rotateZ(-Math.PI/2);for(const o of this.lines)this.scene.add(o)}update(e){for(const i of this.lines)i.rotateZ(Math.PI/15*e)}render(e){this.renderer.render(this.scene,this.camera)}onMouseMove(e,i){this.mouse=new s(e,i)}onMouseClick(e){}onMouseDown(e){}onKeyDown(e){}onResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}}
